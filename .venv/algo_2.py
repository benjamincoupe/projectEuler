"""

Problem 2: Even Fibonacci Numbers

Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2,
the first 10 terms will be:
1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed n, find the sum of the even-valued terms.

"""

def fiboEvenSum(n):
    sequence = [1, 2]
    target = 2
    for num in range(n+1):
        if num > 2:
            number = sequence[-2] + sequence[-1]
            sequence += [number]
            if (number % 2 == 0) and number <= n:
                target += number
    return target

print(fiboEvenSum(8))
print(fiboEvenSum(10))
print(fiboEvenSum(34))
print(fiboEvenSum(60))
print(fiboEvenSum(1000))
print(fiboEvenSum(100000))
print(fiboEvenSum(4000000))
